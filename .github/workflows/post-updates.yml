name: Post Copilot Changelog to Discord

on:
  schedule:
    - cron: "0 * * * *" # hourly in UTC
  workflow_dispatch: {}
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: post-copilot-changelog
  cancel-in-progress: true

permissions:
  contents: read
  models: read

jobs:
  post:
    name: Post updates
    if: >
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' && contains(github.event.head_commit.message, '[force-post]'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Restore seen.json cache
        uses: actions/cache/restore@v4
        with:
          path: seen.json
          key: seen-${{ runner.os }}-${{ github.ref_name }}-${{ github.run_id }}
          restore-keys: |
            seen-${{ runner.os }}-${{ github.ref_name }}-
            seen-${{ runner.os }}-
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install -r requirements.txt
      - name: Derive FORCE_POST from commit message
        if: github.event_name == 'push' && contains(github.event.head_commit.message, '[force-post]')
        run: echo "FORCE_POST=1" >> "$GITHUB_ENV"
      - name: Run poster
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          # Use the built-in GITHUB_TOKEN rather than a PAT/secret
          GITHUB_TOKEN: ${{ github.token }}
          # Optional: pick a model from the GitHub Models catalog (fallback to basic summary in code)
          GITHUB_MODELS_MODEL: openai/gpt-5-mini
          FORCE_POST: ${{ env.FORCE_POST }}
        run: python copilot_changelog_to_discord.py
      - name: Save seen.json cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: seen.json
          key: seen-${{ runner.os }}-${{ github.ref_name }}-${{ github.run_id }}

  lint:
    name: Lint & Typecheck & Tests
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install -r requirements.txt -r requirements-dev.txt
      - run: ruff check .
      - run: mypy .
      - run: pytest -q || true  # don't block if tests are added later
